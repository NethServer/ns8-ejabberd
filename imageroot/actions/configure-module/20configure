#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import agent.tasks
import os

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Setup default values
ldap_domain = data.get("ldap_domain", "")
adminsList = data.get("adminsList", [])
s2s= data.get("s2s", False)
upload= data.get("http_upload", False)
host = data.get("hostname", "")
mod_mam_status = data.get("mod_mam_status",False)
shaper_normal = data.get("shaper_normal",500000)
shaper_fast = data.get("shaper_fast",1000000)
mod_http_upload_quota_status = data.get("mod_http_upload_quota_status", False)
mnesia_purge_interval = data.get("purge_mnesia_interval","30")
mnesia_purge = data.get("purge_mnesia_database",False)
le = data.get("lets_encrypt", False)

# Talk with agent using file descriptor.
# Setup configuration from user input.
agent.set_env("EJABBERD_HOSTNAME", host)
agent.set_env("EJABBERD_LDAP_DOMAIN", ldap_domain)
agent.set_env("EJABBERD_ADMIN_LIST", adminsList)
agent.set_env("EJABBERD_S2S", s2s)
agent.set_env("EJABBERD_HTTP_UPLOAD", upload)
agent.set_env("EJABBERD_MOD_MAM_STATUS", mod_mam_status)
agent.set_env("EJABBERD_SHAPER_NORMAL", shaper_normal)
agent.set_env("EJABBERD_SHAPER_FAST", shaper_fast)
agent.set_env("EJABBERD_MOD_HTTP_UPLOAD_QUOTA_STATUS", mod_http_upload_quota_status)
agent.set_env("EJABBERD_PURGE_MNESIA", mnesia_purge)
agent.set_env("EJABBERD_PURGE_MNESIA_INTERVAL", mnesia_purge_interval)
agent.set_env("TRAEFIK_LETS_ENCRYPT", le)
