loglevel: 4
## rotation: Disable ejabberd's internal log rotation, as we use logrotate(8). 
log_rotate_count: 0

hosts:
  - "{{hostname}}"

#
# TLS 1.2
#

define_macro:
  'CERTFILE': "/home/ejabberd/conf/ejabberd.pem"
  'TLSOPTS':
    - "no_sslv3"
    - "no_tlsv1"
    - "no_tlsv1_1"
    - "cipher_server_preference"
  'CIPHERS': "kEECDH:+kEECDH+SHA:kEDH:+kEDH+SHA:+kEDH+CAMELLIA:kECDH:+kECDH+SHA:kRSA:
    +kRSA+SHA:+kRSA+CAMELLIA:!aNULL:!eNULL:!SSLv2:!SSLv3:!RC4:!MD5:!DES:!EXP:!SEED:!IDEA:!3DES"



# Define global certificate (introduced 17.11)
certfiles:
    - 'CERTFILE'

listen:
  - 
    port: 5222
    ip: "0.0.0.0"
    module: ejabberd_c2s
    protocol_options: 'TLSOPTS'
    starttls: true
    starttls_required: true
    max_stanza_size: 65536
    shaper: c2s_shaper
    access: c2s
    ciphers: 'CIPHERS'
    dhfile: "/home/ejabberd/conf/dh.pem"
  - 
    port: 5223
    ip: "0.0.0.0"
    module: ejabberd_c2s
    access: c2s
    shaper: c2s_shaper
    tls: true
    protocol_options: 'TLSOPTS'
    max_stanza_size: 65536
    ciphers: 'CIPHERS'
    dhfile: "/home/ejabberd/conf/dh.pem"
  - 
    port: 5280
    ip: "0.0.0.0"
    module: ejabberd_http
    tls: true
    request_handlers:
      "/websocket": ejabberd_http_ws
      "/api": mod_http_api
      "/bosh": mod_bosh
{%if webadmin %}
      "/admin": ejabberd_web_admin
{% endif %}
    captcha: false
    protocol_options: 'TLSOPTS'
    ciphers: 'CIPHERS'
    dhfile: "/home/ejabberd/conf/dh.pem"
{%if s2s %}
  - 
    port: 5269
    ip: "0.0.0.0"
    module: ejabberd_s2s_in
    max_stanza_size: 131072
    shaper: s2s_shaper
    protocol_options: 'TLSOPTS'
    ciphers: 'CIPHERS'
    dhfile: "/home/ejabberd/conf/dh.pem"
{% endif %}
{%if http_upload %}
  - 
    port: 5443
    ip: "0.0.0.0"
    module: ejabberd_http
    tls: true
    protocol_options: 'TLSOPTS'
    ciphers: 'CIPHERS'
    dhfile: "/home/ejabberd/conf/dh.pem"
    request_handlers:
        "/upload": mod_http_upload
{% endif %}

s2s_use_starttls: required

auth_method: [ldap]
{% if ldap_schema == 'rfc2307' %}
ldap_servers: [{{ldap_host}}]
ldap_rootdn: "{{ldap_user}}"
ldap_password: "{{ldap_password}}"
ldap_encrypt: none
ldap_port: {{ldap_port}}
ldap_base: "{{ldap_base}}"
ldap_filter: "(objectClass=inetOrgPerson)"
ldap_uids: [uid]
{% endif %}

{% if ldap_schema == 'ad' %}
ldap_servers: [{{ldap_host}}]
ldap_rootdn: "{{ldap_user}}"
ldap_password: "{{ldap_password}}"
ldap_encrypt: none
ldap_port: {{ldap_port}}
ldap_base: "{{ldap_base}}"
ldap_uids: [sAMAccountName]
ldap_filter: "(objectClass=organizationalPerson)"
{% endif %}



# Number of processus (introduced by 18.06)
extauth_pool_size: 4
# Do not cache authentication (introduced by 20.01)
auth_use_cache: false

access_rules:
  local:
    - allow: local
  c2s:
    - deny: blocked
    - allow
  announce:
    - allow: admin
  configure:
    - allow: admin
  muc_create:
    - allow: local
  pubsub_createnode:
    - allow: local
  register:
    - deny
  trusted_network:
    - allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      - access:
          - allow:
            - ip: "0.0.0.0"
            - acl: admin
      - oauth:
        - scope: "ejabberd:admin"
        - access:
          - allow:
              - ip: "0.0.0.0"
              - acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      - ip: "0.0.0.0"
    what:
      - "status"
      - "connected_users_number"



acl:
  admin:
    user:
{% for user in adminsList %}
       - {{user}}
{% endfor %}
  local:
    user_regexp: ""
  loopback:
    ip:
      - "0.0.0.0"

shaper:
  normal: {{shaper_normal}} 
  fast: {{shaper_fast}}

max_fsm_queue: 10000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    - 5000: admin
    - 100
  c2s_shaper:
    - none: admin
    - normal
  s2s_shaper: fast

language: "en"


allow_contrib_modules: true

modules:
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce: # recommends mod_adhoc
    access: announce
  mod_blocking: {} # requires mod_privacy
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {} # requires mod_adhoc
  mod_disco: {}
  mod_bosh: {}
  mod_last: {}

{%if mod_mam_status %}
  mod_mam: 
    db_type: mnesia
    use_cache: true
    default: always
{% endif %}

  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
  mod_muc_admin: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping: {}
  mod_privacy: {}
  mod_private: {}
  mod_pubsub:
    access_createnode: pubsub_createnode
    ignore_pep_from_offline: true
    last_item_cache: false
    plugins:
      - "flat"
      - "pep" # pep requires mod_caps
  mod_register:
    welcome_message:
      subject: "Welcome!"
      body: |-
        Hi.
        Welcome to {{hostname}} XMPP server.
    ip_access: trusted_network
    access: register
  mod_roster: {}
  mod_shared_roster: {}
  mod_vcard:
    search: false
  mod_version: {}
  mod_stream_mgmt: {}
  mod_s2s_dialback: {}
  mod_http_api: {}
{%if http_upload %}
  mod_http_upload:
    docroot: "/home/ejabberd/upload/"
    put_url: "https://@HOST@:5443/upload"
{% endif %}
{%if mod_http_upload_quota_status %}
  mod_http_upload_quota: 
    max_days: {{purge_httpd_upload_interval}}
{% endif %}

{% if ldap_schema == 'rfc2307' %}
  mod_shared_roster_ldap:
    ldap_groupattr: "cn"
    ldap_groupdesc: "o"
    ldap_useruid: "uid"
    ldap_ufilter: "(uid=%u)"
    ldap_rfilter: "(objectClass=inetOrgPerson)"
    ldap_memberattr: "uid"
    ldap_memberattr_format: "%u"
    ldap_rootdn: "{{ldap_user}}"
    ldap_password: "{{ldap_password}}"
    ldap_encrypt: none
    ldap_port: {{ldap_port}}
    ldap_base: "{{ldap_base}}"
    ldap_servers: [{{ldap_host}}]
    ldap_uids: [uid]
{% endif %}

{% if ldap_schema == 'ad' %}
  mod_shared_roster_ldap:
    ldap_base: "{{ldap_base}}"
    ldap_encrypt: none
    ldap_gfilter: "(objectCategory=user)"
    ldap_groupattr: "sAMAccountName"
    ldap_groupdesc: ""
    ldap_memberattr: "sAMAccountName"
    ldap_memberattr_format: "%u"
    ldap_password: "{{ldap_password}}"
    ldap_port: {{ldap_port}}
    ldap_rfilter: "(objectCategory=group)"
    ldap_rootdn: "{{ldap_user}}"
    ldap_servers: [{{ldap_host}}]
    ldap_ufilter: "(&(objectClass=user)(sAMAccountName=%u))"
    ldap_userdesc: "displayName"
    ldap_useruid: "sAMAccountName"
{% endif %}
